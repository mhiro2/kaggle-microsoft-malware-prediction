from pathlib import Path

import numpy as np
import pandas as pd


def compute_date(df, data_dir):
    osver_datedict = np.load(data_dir / 'OSVersionTimestamps.npy')[()]
    avsig_datedict = np.load(data_dir / 'AvSigVersionTimestamps.npy')[()]
    osver_date = df['Census_OSVersion'].map(osver_datedict)
    avsig_date = df['AvSigVersion'].map(avsig_datedict)
    return pd.concat([osver_date, avsig_date], axis=1).max(axis=1)


if __name__ == '__main__':
    data_dir = Path(__file__).parent.parent.joinpath('./data/input')
    cols = ['AvSigVersion', 'Census_OSVersion']
    dtypes = {'AvSigVersion': 'object', 'Census_OSVersion': 'object'}

    date_train = pd.DataFrame()
    date_test = pd.DataFrame()

    train_df = pd.read_csv(data_dir / 'train.csv.xz', usecols=cols, dtype=dtypes)
    test_df = pd.read_csv(data_dir / 'test.csv.xz', usecols=cols, dtype=dtypes)

    date_train['Date'] = compute_date(train_df, data_dir)
    date_test['Date'] = compute_date(test_df, data_dir)
    date_train['Day'] = date_train.Date.dt.day.astype('uint8')
    date_test['Day'] = date_test.Date.dt.day.astype('uint8')
    date_train['Hour'] = date_train.Date.dt.hour.astype('uint8')
    date_test['Hour'] = date_test.Date.dt.hour.astype('uint8')
    date_train['Minute'] = date_train.Date.dt.minute.astype('uint8')
    date_test['Minute'] = date_test.Date.dt.minute.astype('uint8')
    date_train['DayOfWeek'] = date_train.Date.dt.dayofweek.astype('uint8')
    date_test['DayOfWeek'] = date_test.Date.dt.dayofweek.astype('uint8')

    date_train.to_feather(data_dir / 'train_timestamps.feather')
    date_test.to_feather(data_dir / 'test_timestamps.feather')

